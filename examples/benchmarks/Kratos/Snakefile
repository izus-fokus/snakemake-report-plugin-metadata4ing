from pathlib import Path

files = list(Path(".").rglob("parameters_*.json"))
names = [f.stem.split("_")[1] for f in files]

rule all:
    input:
        expand("summary_{name}.json", name=names),
        #expand("output_{name}.h5", name=names)

rule generate_input_files:
    input:
        "experiment.json",
        "parameters_{name}.json",
    output:
        "data/input_{name}.json",
        "data/mesh_{name}.msh",
        "data/mesh_{name}.mdpa",
    conda: "environment.yml"
    shell:"""
        python3 create_input_files.py {wildcards.name} {input}
        """


rule run_simulation:
    input:
        "data/input_{name}.json",
        "data/mesh_{name}.mdpa",
    output:
        directory("data/output_{name}"),
    conda:
        "environment.yml",
    shell: "python3 MainKratos.py {input[0]}" #"python3 run_simulation.py {wildcards.name} {input}"

rule summary:
    input:
        "data/output_{name}",
        "data/input_{name}.json",
        "data/mesh_{name}.mdpa",
        "parameters_{name}.json",
    output:
        "summary_{name}.json",
    run:
        import json
        import pyvista
        summary = {}
        summary["name"] = wildcards.name
        summary["parameters"] = input[3]
        summary["input"] = input[1]
        summary["mesh"] = input[2]
        summary["output"] = input[0]
        # Load the mesh and output data
        mesh = pyvista.read(Path(input[0])/ "Structure_0_1.vtk")
        max_mises_stress = float(mesh["VON_MISES_STRESS"].max())
        print("Max Mises Stress:", max_mises_stress)
        summary["max_mises_stress"] = max_mises_stress
        with open(output[0], "w") as f:
            json.dump(summary, f, indent=4)